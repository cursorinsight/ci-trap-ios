{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManager, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheral)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManager, didDiscover: CBPeripheral, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManager)","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy","title":"CBCentralManagerDelegateProxy","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/touchrecognizer\/init(_:)","title":"init(TrapTouchCollector)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/touchrecognizer\/gesturerecognizer(_:shouldrecognizesimultaneouslywith:)","title":"func gestureRecognizer(UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: UIGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesbegan(_:with:)","title":"func touchesBegan(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchescancelled(_:with:)","title":"func touchesCancelled(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesended(_:with:)","title":"func touchesEnded(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesmoved(_:with:)","title":"func touchesMoved(Set<UITouch>, with: UIEvent?)","type":"method"}],"path":"\/documentation\/trap\/touchrecognizer","title":"TouchRecognizer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/init(withconfig:withqueue:)","title":"init(withConfig: Config?, withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapaccelerometercollector","title":"TrapAccelerometerCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/init(withconfig:)","title":"init(withConfig: Config?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/manager","title":"var manager: CBCentralManagerProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManagerProtocol, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheralProtocol)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManagerProtocol, didDiscover: CBPeripheralProtocol, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManagerProtocol)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapbluetoothcollector","title":"TrapBluetoothCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/init(withconfig:)","title":"init(withConfig: Config?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/trap\/trapgesturecollector","title":"TrapGestureCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/init(withconfig:withqueue:)","title":"init(withConfig: Config?, withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapgravitycollector","title":"TrapGravityCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/init(withconfig:withqueue:)","title":"init(withConfig: Config?, withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapgyroscopecollector","title":"TrapGyroscopeCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/init(withconfig:)","title":"init(withConfig: Config?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didfinishdeferredupdateswitherror:)","title":"func locationManager(CLLocationManager, didFinishDeferredUpdatesWithError: Error?)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"}],"path":"\/documentation\/trap\/traplocationcollector\/cllocationmanagerdelegate-implementations","title":"CLLocationManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/trap\/traplocationcollector","title":"TrapLocationCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/init(withconfig:withqueue:)","title":"init(withConfig: Config?, withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapmagnetometercollector","title":"TrapMagnetometerCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmanager\/init(withconfig:withreporterqueue:withcollectorqueue:)","title":"init(withConfig: Config?, withReporterQueue: OperationQueue?, withCollectorQueue: OperationQueue?) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmanager\/halt(collector:)","title":"func halt(collector: TrapDatasource)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/haltall()","title":"func haltAll()","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/run(collector:)","title":"func run(collector: TrapDatasource) throws","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/runall()","title":"func runAll() throws","type":"method"}],"path":"\/documentation\/trap\/trapmanager","title":"TrapManager","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappinchcollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappinchcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trappinchcollector","title":"TrapPinchCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappointercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappointercollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappointercollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trappointercollector","title":"TrapPointerCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/init(withconfig:)","title":"init(withConfig: Config?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didfinishdeferredupdateswitherror:)","title":"func locationManager(CLLocationManager, didFinishDeferredUpdatesWithError: Error?)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"}],"path":"\/documentation\/trap\/trappreciselocationcollector\/cllocationmanagerdelegate-implementations","title":"CLLocationManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/trap\/trappreciselocationcollector","title":"TrapPreciseLocationCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapstyluscollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapstyluscollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapstyluscollector","title":"TrapStylusCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapswipecollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapswipecollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapswipecollector","title":"TrapSwipeCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptapcollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptapcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/traptapcollector","title":"TrapTapCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptouchcollector\/createrecongizers(_:)","title":"func createRecongizers(UIWindow) -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptouchcollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/traptouchcollector","title":"TrapTouchCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/init(withconfig:)","title":"init(withConfig: Config?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapwificollector","title":"TrapWiFiCollector","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManagerProtocol, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheralProtocol)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManagerProtocol, didDiscover: CBPeripheralProtocol, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManagerProtocol)","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol","title":"CBCentralManagerDelegateProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/isscanning","title":"var isScanning: Bool","type":"property"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/state","title":"var state: CBManagerState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/registerforconnectionevents(options:)","title":"func registerForConnectionEvents(options: [CBConnectionEventMatchingOption : Any]?)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/scanforperipherals(withservices:options:)","title":"func scanForPeripherals(withServices: [CBUUID]?, options: [String : Any]?)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/stopscan()","title":"func stopScan()","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerprotocol","title":"CBCentralManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/state","title":"var state: CBPeripheralState","type":"property"}],"path":"\/documentation\/trap\/cbperipheralprotocol","title":"CBPeripheralProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/start()","title":"func start()","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/instance(withconfig:withqueue:)","title":"static func instance(withConfig: Config, withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapdatasource","title":"TrapDatasource","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasourcedelegate\/save(sequence:data:)","title":"func save(sequence: Int64, data: DataType)","type":"method"}],"path":"\/documentation\/trap\/trapdatasourcedelegate","title":"TrapDatasourceDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/cachedtransport","title":"var cachedTransport: Bool","type":"property"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/interval","title":"var interval: OperationQueue.SchedulerTimeType.Stride","type":"property"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/maxfilecachesize","title":"var maxFileCacheSize: UInt64","type":"property"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/sessionid","title":"var sessionId: UUID","type":"property"},{"path":"\/documentation\/trap\/config\/reporter-swift.struct\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/trap\/config\/reporter-swift.struct","title":"Config.Reporter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/config\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/config\/accelerationsamplingrate","title":"var accelerationSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/config\/collectors","title":"var collectors: [TrapDatasource.Type]","type":"property"},{"path":"\/documentation\/trap\/config\/gravitysamplingrate","title":"var gravitySamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/config\/gyroscopesamplingrate","title":"var gyroscopeSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/config\/magnetometersamplingrate","title":"var magnetometerSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/config\/queuesize","title":"var queueSize: Int","type":"property"},{"path":"\/documentation\/trap\/config\/reporter-swift.property","title":"var reporter: Reporter","type":"property"}],"path":"\/documentation\/trap\/config","title":"Config","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/trap\/datatype\/array(_:)","title":"case array([DataType])","type":"case"},{"path":"\/documentation\/trap\/datatype\/dict(_:)","title":"case dict([String : DataType])","type":"case"},{"path":"\/documentation\/trap\/datatype\/double(_:)","title":"case double(Double)","type":"case"},{"path":"\/documentation\/trap\/datatype\/float(_:)","title":"case float(Float)","type":"case"},{"path":"\/documentation\/trap\/datatype\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/trap\/datatype\/int64(_:)","title":"case int64(Int64)","type":"case"},{"path":"\/documentation\/trap\/datatype\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/datatype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/trap\/datatype","title":"DataType","type":"enum"}],"path":"\/documentation\/trap","title":"Trap","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}