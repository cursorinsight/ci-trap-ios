{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManager, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheral)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManager, didDiscover: CBPeripheral, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManager)","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerdelegateproxy","title":"CBCentralManagerDelegateProxy","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/touchrecognizer\/init(_:)","title":"init(TrapTouchCollector)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/touchrecognizer\/gesturerecognizer(_:shouldreceive:)","title":"func gestureRecognizer(UIGestureRecognizer, shouldReceive: UITouch) -> Bool","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/gesturerecognizer(_:shouldrecognizesimultaneouslywith:)","title":"func gestureRecognizer(UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: UIGestureRecognizer) -> Bool","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesbegan(_:with:)","title":"func touchesBegan(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchescancelled(_:with:)","title":"func touchesCancelled(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesended(_:with:)","title":"func touchesEnded(Set<UITouch>, with: UIEvent?)","type":"method"},{"path":"\/documentation\/trap\/touchrecognizer\/touchesmoved(_:with:)","title":"func touchesMoved(Set<UITouch>, with: UIEvent?)","type":"method"}],"path":"\/documentation\/trap\/touchrecognizer","title":"TouchRecognizer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/init(withqueue:)","title":"init(withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapaccelerometercollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapaccelerometercollector","title":"TrapAccelerometerCollector","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbatterycollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbatterycollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbatterycollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbatterycollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapbatterycollector\/sendbatteryevent()","title":"func sendBatteryEvent()","type":"method"},{"path":"\/documentation\/trap\/trapbatterycollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapbatterycollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbatterycollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapbatterycollector","title":"TrapBatteryCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/manager","title":"var manager: CBCentralManagerProtocol?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManagerProtocol, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheralProtocol)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManagerProtocol, didDiscover: CBPeripheralProtocol, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManagerProtocol)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapbluetoothcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapbluetoothcollector","title":"TrapBluetoothCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/config","title":"var config: TrapConfig.DataCollection?","type":"property"},{"path":"\/documentation\/trap\/trapgesturecollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgesturecollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapgesturecollector\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/trap\/trapgesturecollector","title":"TrapGestureCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/init(withqueue:)","title":"init(withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapgravitycollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgravitycollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapgravitycollector","title":"TrapGravityCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/init(withqueue:)","title":"init(withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapgyroscopecollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapgyroscopecollector","title":"TrapGyroscopeCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didfinishdeferredupdateswitherror:)","title":"func locationManager(CLLocationManager, didFinishDeferredUpdatesWithError: Error?)","type":"method"},{"path":"\/documentation\/trap\/traplocationcollector\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"}],"path":"\/documentation\/trap\/traplocationcollector\/cllocationmanagerdelegate-implementations","title":"CLLocationManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/trap\/traplocationcollector","title":"TrapLocationCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/init(withqueue:)","title":"init(withQueue: OperationQueue?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmagnetometercollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapmagnetometercollector","title":"TrapMagnetometerCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmanager\/init(withconfig:withreporterqueue:withcollectorqueue:)","title":"init(withConfig: TrapConfig?, withReporterQueue: OperationQueue?, withCollectorQueue: OperationQueue?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmanager\/addcustomevent(custom:)","title":"func addCustomEvent(custom: DataType)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/addcustommetadata(key:value:)-5sxjy","title":"func addCustomMetadata(key: String, value: DataType)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/addcustommetadata(key:value:)-9wpmi","title":"func addCustomMetadata(key: String, value: String)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/halt(collector:)","title":"func halt(collector: TrapDatasource)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/haltall()","title":"func haltAll()","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/removecustommetadata(key:)","title":"func removeCustomMetadata(key: String)","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/run(collector:)","title":"func run(collector: TrapDatasource) throws","type":"method"},{"path":"\/documentation\/trap\/trapmanager\/runall()","title":"func runAll() throws","type":"method"}],"path":"\/documentation\/trap\/trapmanager","title":"TrapManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmetadatacollector\/init(withqueue:)","title":"init(withQueue: OperationQueue)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmetadatacollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmetadatacollector\/addcustom(key:value:)","title":"func addCustom(key: String, value: DataType)","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/removecustom(key:)","title":"func removeCustom(key: String)","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapmetadatacollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapmetadatacollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapmetadatacollector","title":"TrapMetadataCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappinchcollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappinchcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trappinchcollector","title":"TrapPinchCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappointercollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappointercollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappointercollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trappointercollector","title":"TrapPointerCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didfinishdeferredupdateswitherror:)","title":"func locationManager(CLLocationManager, didFinishDeferredUpdatesWithError: Error?)","type":"method"},{"path":"\/documentation\/trap\/trappreciselocationcollector\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"}],"path":"\/documentation\/trap\/trappreciselocationcollector\/cllocationmanagerdelegate-implementations","title":"CLLocationManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/trap\/trappreciselocationcollector","title":"TrapPreciseLocationCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapstyluscollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapstyluscollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapstyluscollector","title":"TrapStylusCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapswipecollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapswipecollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapswipecollector","title":"TrapSwipeCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptapcollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptapcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/traptapcollector","title":"TrapTapCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptouchcollector\/createrecongizers()","title":"func createRecongizers() -> [UIGestureRecognizer]","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/traptouchcollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/traptouchcollector","title":"TrapTouchCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapwificollector\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwificollector\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapwificollector","title":"TrapWiFiCollector","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwindoweventdispatcher\/addgesturerecognizer(_:)","title":"func addGestureRecognizer(UIGestureRecognizer)","type":"method"},{"path":"\/documentation\/trap\/trapwindoweventdispatcher\/removegesturerecognizer(_:)","title":"func removeGestureRecognizer(UIGestureRecognizer)","type":"method"},{"path":"\/documentation\/trap\/trapwindoweventdispatcher\/sendevent(_:)","title":"func sendEvent(UIEvent)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapwindoweventdispatcher\/shared","title":"static let shared: TrapWindowEventDispatcher","type":"property"}],"path":"\/documentation\/trap\/trapwindoweventdispatcher","title":"TrapWindowEventDispatcher","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanager(_:connectioneventdidoccur:for:)","title":"func centralManager(CBCentralManagerProtocol, connectionEventDidOccur: CBConnectionEvent, for: CBPeripheralProtocol)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanager(_:diddiscover:advertisementdata:rssi:)","title":"func centralManager(CBCentralManagerProtocol, didDiscover: CBPeripheralProtocol, advertisementData: [String : Any], rssi: NSNumber)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol\/centralmanagerdidupdatestate(_:)","title":"func centralManagerDidUpdateState(CBCentralManagerProtocol)","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerdelegateprotocol","title":"CBCentralManagerDelegateProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/isscanning","title":"var isScanning: Bool","type":"property"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/state","title":"var state: CBManagerState","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/registerforconnectionevents(options:)","title":"func registerForConnectionEvents(options: [CBConnectionEventMatchingOption : Any]?)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/scanforperipherals(withservices:options:)","title":"func scanForPeripherals(withServices: [CBUUID]?, options: [String : Any]?)","type":"method"},{"path":"\/documentation\/trap\/cbcentralmanagerprotocol\/stopscan()","title":"func stopScan()","type":"method"}],"path":"\/documentation\/trap\/cbcentralmanagerprotocol","title":"CBCentralManagerProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/trap\/cbperipheralprotocol\/state","title":"var state: CBPeripheralState","type":"property"}],"path":"\/documentation\/trap\/cbperipheralprotocol","title":"CBPeripheralProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/delegate","title":"var delegate: TrapDatasourceDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/checkconfiguration()","title":"func checkConfiguration() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/checkpermission()","title":"func checkPermission() -> Bool","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/requestpermission(_:)","title":"func requestPermission(() -> Void)","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/start(withconfig:)","title":"func start(withConfig: TrapConfig.DataCollection)","type":"method"},{"path":"\/documentation\/trap\/trapdatasource\/stop()","title":"func stop()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasource\/instance(withqueue:)","title":"static func instance(withQueue: OperationQueue) -> TrapDatasource","type":"method"}],"path":"\/documentation\/trap\/trapdatasource","title":"TrapDatasource","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapdatasourcedelegate\/save(sequence:data:)","title":"func save(sequence: Int64, data: DataType)","type":"method"}],"path":"\/documentation\/trap\/trapdatasourcedelegate","title":"TrapDatasourceDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/adler32\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/adler32\/checksum","title":"var checksum: UInt32","type":"property"},{"path":"\/documentation\/trap\/adler32\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/adler32\/advance(withchunk:)","title":"func advance(withChunk: Data)","type":"method"}],"path":"\/documentation\/trap\/adler32","title":"Adler32","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/crc32\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/crc32\/checksum","title":"var checksum: UInt32","type":"property"},{"path":"\/documentation\/trap\/crc32\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/crc32\/advance(withchunk:)","title":"func advance(withChunk: Data)","type":"method"}],"path":"\/documentation\/trap\/crc32","title":"Crc32","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/init()","title":"init()","type":"init"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/accelerationsamplingrate","title":"var accelerationSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/collectcoalescedpointerevents","title":"var collectCoalescedPointerEvents: Bool","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/collectcoalescedstylusevents","title":"var collectCoalescedStylusEvents: Bool","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/collectcoalescedtouchevents","title":"var collectCoalescedTouchEvents: Bool","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/collectors","title":"var collectors: [String]","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/gravitysamplingrate","title":"var gravitySamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/gyroscopesamplingrate","title":"var gyroscopeSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/magnetometersamplingrate","title":"var magnetometerSamplingRate: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/metadatasubmissioninterval","title":"var metadataSubmissionInterval: TimeInterval","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/usegesturerecognizer","title":"var useGestureRecognizer: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/datacollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/trap\/trapconfig\/datacollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/trap\/trapconfig\/datacollection","title":"TrapConfig.DataCollection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/apikeyname","title":"var apiKeyName: String","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/apikeyvalue","title":"var apiKeyValue: String","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/cachedtransport","title":"var cachedTransport: Bool","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/compressed","title":"var compressed: Bool","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/interval","title":"var interval: OperationQueue.SchedulerTimeType.Stride","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/maxfilecachesize","title":"var maxFileCacheSize: UInt64","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/sessionid","title":"var sessionId: UUID","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct\/url","title":"var url: String","type":"property"}],"path":"\/documentation\/trap\/trapconfig\/reporter-swift.struct","title":"TrapConfig.Reporter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/init()","title":"init()","type":"init"},{"path":"\/documentation\/trap\/trapconfig\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/defaultdatacollection","title":"var defaultDataCollection: DataCollection","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/lowbatterydatacollection","title":"var lowBatteryDataCollection: DataCollection","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/lowbatterythreshold","title":"var lowBatteryThreshold: Float","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/lowdatadatacollection","title":"var lowDataDataCollection: DataCollection","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/queuesize","title":"var queueSize: Int","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/reporter-swift.property","title":"var reporter: Reporter","type":"property"},{"path":"\/documentation\/trap\/trapconfig\/sessionidfilter","title":"var sessionIdFilter: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/isdatacollectiondisabled()","title":"func isDataCollectionDisabled() -> Bool","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/trapconfig\/loadconfigfromurl(_:completion:)","title":"static func loadConfigFromUrl(URL, completion: ((TrapConfig?) -> Void))","type":"method"}],"path":"\/documentation\/trap\/trapconfig","title":"TrapConfig","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/trap\/datatype\/array(_:)","title":"case array([DataType])","type":"case"},{"path":"\/documentation\/trap\/datatype\/bool(_:)","title":"case bool(Bool)","type":"case"},{"path":"\/documentation\/trap\/datatype\/dict(_:)","title":"case dict([String : DataType])","type":"case"},{"path":"\/documentation\/trap\/datatype\/double(_:)","title":"case double(Double)","type":"case"},{"path":"\/documentation\/trap\/datatype\/float(_:)","title":"case float(Float)","type":"case"},{"path":"\/documentation\/trap\/datatype\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/trap\/datatype\/int64(_:)","title":"case int64(Int64)","type":"case"},{"path":"\/documentation\/trap\/datatype\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/trap\/datatype\/uint64(_:)","title":"case uint64(UInt64)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/datatype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/trap\/datatype","title":"DataType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/trap\/foundation\/data\/adler32()","title":"func adler32() -> Adler32","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/compress(withalgorithm:)","title":"func compress(withAlgorithm: CompressionAlgorithm) -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/crc32()","title":"func crc32() -> Crc32","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/decompress(withalgorithm:)","title":"func decompress(withAlgorithm: CompressionAlgorithm) -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/deflate()","title":"func deflate() -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/gunzip()","title":"func gunzip() -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/gzip()","title":"func gzip() -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/inflate()","title":"func inflate() -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/unzip(skipchecksumvalidation:)","title":"func unzip(skipCheckSumValidation: Bool) -> Data?","type":"method"},{"path":"\/documentation\/trap\/foundation\/data\/zip()","title":"func zip() -> Data?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/lz4","title":"case lz4","type":"case"},{"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/lzfse","title":"case lzfse","type":"case"},{"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/lzma","title":"case lzma","type":"case"},{"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/zlib","title":"case zlib","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/trap\/foundation\/data\/compressionalgorithm","title":"Data.CompressionAlgorithm","type":"enum"}],"path":"\/documentation\/trap\/foundation\/data","title":"Data","type":"extension"}],"path":"\/documentation\/trap\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/trap","title":"Trap","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}